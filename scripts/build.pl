#!perl

use strict;
use warnings;
use Template;
use File::Find::Rule;
use File::Slurp qw/read_file/;

my @libraries = map {

    my $path = $_;
    my $contents = read_file $path;
    my ($name) = $path =~ m/([\w\d]+)\.js$/;

    {
        path => $path,
        contents => $contents,
        name => $name
    }

} File::Find::Rule
    ->file()
    ->name( '*.js' )
    ->in( './src/' );

my $template = join '', (<DATA>);

Template->new->process(\$template, { libraries => \@libraries });

__DATA__
// Copyright Peter Sergeant pete@clueball.com
// MIT License
// This file is automatically generated

// Usage:
// var addresses = ziprip.extract( dom, urlString )
//
// But see http://www.zipripjs.com/ for full documentation

ziprip = (function () {

var libraries = {};

var require = function (name) {
    return libraries[name]();
}

[% FOREACH library = libraries %]
// Imported from: [% library.path %]
libraries['[% library.name %]'] = function () {
    var exports = {};
// File contents begin
[% library.contents %]
// File contents end
    return exports;
}

[% END %]

return require('ziprip')['extract'];

})();